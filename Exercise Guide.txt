//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Org Variables
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
org username =
org password =
org token =

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Creating the TrailheadDX Architect Org
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1.	Install SFDX CLI
2.	Install GIT
3.	Install Visual Studio Code
4.	Git Clone the repo at https://github.com/cloudpremise/trailheaddx-arch
    $ git clone https://github.com/cloudpremise/trailheaddx-arch
5.	Open the trailheaddx-arch folder from VS Code
6.	Link your project to a devhub
    $ sfdx force:auth:web:login --setdefaultdevhubusername --setalias devhuborg
7.	Create a default scratch org
8.	sfdx force:org:create -f config\project-scratch-ent.json --setalias thdx1 --setdefaultusername
9.	Push Code to org
    $ sfdx force:source:push --forceoverwrite
10.	Assign Permission Set to User
    $ sfdx force:user:permset:assign -n TrailheadDX



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Outbound Message Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Obtain a new endpoint by going to https://putsreq.com --> Create a PutsReq (others to try: http://httpresponder.com/)

In Salesforce (new tab)
1. Create (or observe the existing) an Outbound Message Setup --> Workflow --> Outbound Message --> New Outbound Message

Object = Actor
Name = Notify Actors Union
Unique Name = Notify_Actors_Union
Endpoint URL = <enter the putsreq endpoint>
Send Session ID = Checked
Available Fields = <ALL FIELDS>

2. Save
3. Setup --> Workflow Rules --> New Rule --> Actor

Rule Name = onCreateEditActor
Evaluate the rule when a record is = created, and every time it's edited
Run this rule if the = formula evaluates to true
formula = TRUE

4. Save & Next
5. Add Workflow Action --> Select Existing Action

Search = Outbound Message
Selected Action = Outbound Message: Notify Actors Union

6. Save --> Done --> Activate
7. Add an Actor from Movie Magic Application --> Actor
8. Return to the web proxy endpoint and observe the outbound message (e.g. https://putsreq.com/2Kvm4TFVRH9wJGngThg7/inspect)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Outbound Callout Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Obtain a new endpoint by going to https://putsreq.com --> Create a PutsReq (others to try: http://httpresponder.com/)

In Salesforce (new tab)
1. Update the Named Credential URL with the correct endpoint (e.g. https://putsreq.com/2Kvm4TFVRH9wJGngThg7)
2. Create a time card record
3. Return to the web proxy endpoint and observe the callout (e.g. https://putsreq.com/2Kvm4TFVRH9wJGngThg7/inspect)
4. Return to Salesforce and look through the solution

- What are the issues with the trigger?
- What are the issues with the TimeCardService?

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Apex Rest Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Download and Install Postman
2. Install the Postman Collection Located at: https://www.getpostman.com/collections/c4e35e11b2f8ae31fb82
3. Obtain the OAuth Information for the api calls at Setup --> App Manager --> API Demo --> View

Consumer Key = 
Consumer Secret = 

4. Import the Postman Environment located within the git repository
5. Set the variables in the postman THDX Environment

clientID = <Salesforce Consumer Key>
clientSecret = <Salesforce Consumer Secret>
username = <salesforce user name>
password = <salesforce user password>
token = <salsforce token>
environment = test (if using scratch or sandbox, otherwise value would be login)

6. Exercise the OAuth Login (User/Password Flow)
7. Exercise the Create Box Office Results (POST) API call


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
SAML Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Navigate to https://axiomsso.herokuapp.com/Home.action
2. Click "SAML Identity Provider & Tester"
3. Click "Configure" to download the x509 certificate.  Remember where you saved the file.

In Salesforce:
1. Enable SSO Under Setup --> Single Sign On Settings
2. SAML Enabled = Checked
3. Click "New" on SAML Single Sign-On Settings

Name = Axiom
API Name = Axiom
Issuer = https://axiomsso.herokuapp.com
Entity ID = https://saml.salesforce.com
Identity Provider Certificate = <Upload the x509 certificate previously downloaded>
SAML Identity Type = Assersion contains the Federation ID from the User Object
SAML Identity Location = Identity is in the NameIdentifier element of the Subject statement

4. Save
5. Copy the Login URL

Login URL = 

In Axiom:
1. Click "Generate"

SAML Version=2.0
Username = thdx_fed_id
Issuer = https://axiomsso.herokuapp.com
Recipient URL = <Enter the Login URL copied from Salesforce>
Entity ID = https://saml.salesforce.com
Start URL / Relay State = <Enter a Salesforce URL to redirect to after the SSO flow is complete>

2. Click "Request SAML Response"

In Salesforce
1. Add the federation ID to the user id under Setup --> Users --> <your user id> --> Federation ID

Federation ID = thdx_fed_id

2. Logout of Salesforce

In Axiom
1. Click "Login"
2. You should be logged into Salesforce automatically
3. If you want to retry, go back in your browswer to the Axiom screen that says "Request SAML Response" to generate a new SAML response

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
OAuth Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
In Salesforce
1. Navigate to App Manager (Lightning Experience) --> View
2. Copy the Consumer Key
3. Copy the Consumer Secret

OAuth Demo Consumer Key = 
OAuth Demo Consumer Secret = 

New Browser Tab
1. Navigate to https://axiomsso.herokuapp.com/Home.action
2. Click "OAuth Tester"
3. Click "OAuth 2.0"

Host = test.salesforce.com (if you are using sandbox or scratch org, otherwise it would be login.salesforce.com)
Consumer Key = <Consumer Key from Salesforce>

4. Copy Redirect URI

Redirect URI = 

In Salesforce (Edit OAuth Demo Connected App)
1. Callback URL = <Redirect URI from Axiom>
2. Save

In Axiom
1. Click "Request Authorization Code" (This may take up to 10 minutes to work due to Salesforce internal propogation of Connected App information)
2. OAuth Demo Authorization Screen Should appear.  Click "Allow"
3. Screen Redirects to Axiom with Auth Code in URL

Consumer Secret = <paste consumer secret from Salesforce>

4. Click "Request Access Token"
5. Note the information required for API Calls into Salesforce

Instance URL = 
Access Token = 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Authorization Provider Exercise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1. Navigate to https://developers.facebook.com/
2. Add a New App

Display Name = TrailheadDX

3. Click Create App ID
4. Enter CAPTCHA info
5. Copy Information for Salesforce
Settings --> Basic
Copy Information for Salesforce

App ID = 
App Secret = 

6. Add Platform --> Website

New Tab to Salesforce Org
1. Setup --> Auth. Providers
2. New --> Facebook

Name = Facebook
URL Suffix = Facebook
Consumer Key = <App ID from Facebook>
Consumer Secret = <App Secret from Facebook>
User Info Endpoint URL = https://graph.facebook.com/me?fields=name,first_name,last_name,id,email
Registration Handler = TrailheadDXFacebookRegHandler
Execute Registration As = <your user id>

3. Copy Information Required for Facebook

Callback URL = 

In Facebook Developer App
1. Enter Site URL

Site URL = <Callback URL from Salesforce>

2. Save Changes
3. From Dashoard --> Products --> Facebook Login --> Settings

Valid OAuth Redirect URIs = <Callback URL from Salesforce>

4. Save Changes

In Salesforce
1. Setup --> My Domain --> Authentication Configuration --> Edit

Facebook = Checked

2. Copy My Domain URL

My Domain URL = https://app-drive-2416.cs10.my.salesforce.com/

From New Browser (Therefore not logged into facebook or salesforce)
1. Navigate to My Domain URL
2. Click "Facebook"